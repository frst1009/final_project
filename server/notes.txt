  // login: async (req, res) => {
  //   try {
  //     let user = await User.findOne({
  //       email: req.body.email,
  //     });

  //     if (!user) {
  //       return res.status(404).json({ message: "User not found!" });
  //     }

  //     const isPasswordValid = await bcrypt.compare(
  //       req.body.password,
  //       user.password
  //     );
  //     if (!isPasswordValid) {
  //       return res
  //         .status(401)
  //         .json({ message: "Incorrect username or password!" });
  //     }

  //     let token = jwt.sign({ email: req.body.email }, privateKey);
  //     res.status(200).json({ token: token });
  //   } catch (error) {
  //     res.status(500).json({ message: "Internal server error!" });
  //   }
  // },